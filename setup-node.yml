- name: Setup Node
  hosts: all
  become: yes
  tasks:
    - name: Update packages
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - build-essential
          - certbot
          - python3-certbot-nginx
        state: present

    - name: Add Docker repository key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Install Docker
      apt:
        name: docker-ce
        state: present
        update_cache: yes

    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Install NVM
      shell: |
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
      args:
        executable: /bin/bash
      become: no

    - name: Install Node.js 16 and update npm 
      shell: |
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        nvm install 16.19.1
        nvm use v16.19.1
        npm i -g npm
      args:
        executable: /bin/bash
      become: no

    - name: Install Nginx
      apt:
        name: nginx
        state: present

    - name: Ensure Nginx is running and enabled on boot
      systemd:
        name: nginx
        state: started
        enabled: yes
    
    - name: Create a default Nginx server configuration
      copy:
        content: |
          server {
              listen 80;
              listen [::]:80;

              server_name {{ dragd_host_domain_name }};
              location / {
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header Host $http_host;
                  proxy_set_header X-NginX-Proxy true;

                  proxy_pass http://127.0.0.1:3000;
                  proxy_redirect off;
              }
          }
        dest: /etc/nginx/sites-enabled/default
        owner: root
        group: root
        mode: 0644

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Reload Nginx
      ansible.builtin.systemd:
        name: nginx
        state: reloaded
      become: true

    - name: Create .env file with MONGO_CONNECTION_STRING
      become: no
      ansible.builtin.copy:
        content: "MONGO_CONNECTION_STRING={{ mongo_connection_string }}"
        dest: /root/.env
        owner: root
        group: root
        mode: "0600"

    - name: Obtain certificate using Certbot with Nginx plugin
      ansible.builtin.command: certbot --nginx -d {{ dragd_host_domain_name }} --email {{ letsencrypt_email }} --agree-tos --non-interactive

    