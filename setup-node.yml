- name: Setup Node
  hosts: all
  become: yes
  tasks:
    - name: Update packages
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - build-essential
        state: present

    - name: Add Docker repository key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Install Docker
      apt:
        name: docker-ce
        state: present
        update_cache: yes

    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Install NVM
      shell: |
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
      args:
        executable: /bin/bash
      become: no

    - name: Install Node.js 16
      shell: |
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        nvm install 16.19.1
      args:
        executable: /bin/bash
      become: no

    - name: Install Traefik
      get_url:
        url: https://github.com/traefik/traefik/releases/download/v2.9.9/traefik_v2.9.9_linux_amd64.tar.gz
        dest: /tmp/traefik.tar.gz
      register: traefik_tar

    - name: Extract Traefik
      unarchive:
        src: "{{ traefik_tar.dest }}"
        dest: /usr/local/bin
        remote_src: yes
        owner: root
        group: root
        mode: "0755"
      when: traefik_tar.changed

    - name: Create Traefik configuration directory
      ansible.builtin.file:
        path: /etc/traefik
        state: directory
        owner: root
        group: root
        mode: "0755"

    - name: Add Traefik configuration
      ansible.builtin.copy:
        content: |
          entryPoints:
            http:
              address: ":80"
            https:
              address: ":443"

          providers:
            file:
              filename: "/etc/traefik/dynamic.yaml"
              watch: true

          certificatesResolvers:
            letsencrypt:
              acme:
                email: "{{ traefik_email }}"
                storage: "/etc/traefik/acme.json"
                httpChallenge:
                  entryPoint: "http"
        dest: /etc/traefik/traefik.yaml
        owner: root
        group: root
        mode: "0644"

    - name: Add Traefik systemd service configuration
      ansible.builtin.copy:
        content: |
          [Unit]
          Description=Traefik
          Documentation=https://docs.traefik.io
          After=network.target
          Wants=network.target

          [Service]
          ExecStart=/usr/local/bin/traefik --configFile=/etc/traefik/traefik.yaml
          Restart=on-failure
          User=root
          Group=root

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/traefik.service
        owner: root
        group: root
        mode: "0644"

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Ensure Traefik service is enabled and started
      systemd:
        name: traefik
        state: started
        enabled: yes
        daemon_reload: yes
    
    - name: Create crontab entry to run traefik.js on boot using Node v16
      become: no
      ansible.builtin.cron:
        name: "Run traefik.js on boot"
        special_time: reboot
        job: "/root/.nvm/versions/node/v16.19.1/bin/node /root/traefik.js"
        user: root

    - name: Create .env file with MONGO_CONNECTION_STRING
      become: no
      ansible.builtin.copy:
        content: "MONGO_CONNECTION_STRING={{ mongo_connection_string }}"
        dest: /root/.env
        owner: root
        group: root
        mode: "0600"

    - name: Install moser globally
      become: no
      shell: |
        npm install -g moser
      args:
        executable: /bin/bash

    - name: Create crontab entry to run moser on boot using Node v16
      become: no
      ansible.builtin.cron:
        name: "Run moser on boot"
        special_time: reboot
        job: "/root/.nvm/versions/node/v16.19.1/bin/moser -p 3001 --mongo \"$(grep MONGO_CONNECTION_STRING /root/.env | cut -d '=' -f2)\""
        user: root